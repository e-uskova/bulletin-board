<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BulletinBoard.Hosts.Api</name>
    </assembly>
    <members>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.CategoryController">
            <summary>
            Контроллер для работы с категориями.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.#ctor(BulletinBoard.Application.AppServices.Contexts.Category.Services.ICategoryService)">
            <summary>
            Инициализация экземпляра <see cref="T:BulletinBoard.Hosts.Api.Controllers.PostController"/>
            </summary>
            <param name="categoryService">Сервис работы с категориями.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.GetCategoryAsync(System.Guid)">
            <summary>
            Получение категории по идентификатору.
            </summary>
            <remarks>
            Пример:
            curl -XGET http://host:port/post/get-by-id
            </remarks>
            <param name="id">Идентификатор категории.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns>Модель категории <see cref="T:BulletinBoard.Contracts.Categories.CategoryDto"/></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.GetCategoriessAsync">
            <summary>
            Получение категорий постранично.
            </summary>
            <param name="cancellationToken">Отмена операции.</param>
            <param name="pageSize">Размер страницы.</param>
            <param name="pageIndex">Номер страницы.</param>
            <returns>Коллекция категорий <see cref="T:BulletinBoard.Contracts.Categories.CategoryDto"/></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.CreateUserAsync(BulletinBoard.Contracts.Categories.CreateCategoryDto)">
            <summary>
            Создание категории.
            </summary>
            <param name="dto">Модель для создания категории.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns>Идентификатор созданной сущности./></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.EditUserAsync(System.Guid,BulletinBoard.Contracts.Categories.CreateCategoryDto)">
            <summary>
            Редактирование категории.
            </summary>
            <param name="dto">Модель для редактирования категории.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.CategoryController.DeleteUserAsync(System.Guid)">
            <summary>
            Удаление категории по идентификатору.
            </summary>
            <param name="id">Идентификатор категории.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.PostController">
            <summary>
            Контроллер для работы с объявлением.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.#ctor(BulletinBoard.Application.AppServices.Contexts.Post.Services.IPostService)">
            <summary>
            Инициализация экземпляра <see cref="T:BulletinBoard.Hosts.Api.Controllers.PostController"/>
            </summary>
            <param name="postService">Сервис работы с объявлениями.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.GetPostAsync(System.Guid)">
            <summary>
            Получение объявления по идентификатору.
            </summary>
            <remarks>
            Пример:
            curl -XGET http://host:port/post/get-by-id
            </remarks>
            <param name="id">Идентификатор объявления.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns>Модель объявления <see cref="T:BulletinBoard.Contracts.Post.PostDto"/></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.GetPostsAsync">
            <summary>
            Получение объявлений постранично.
            </summary>
            <param name="cancellationToken">Отмена операции.</param>
            <param name="pageSize">Размер страницы.</param>
            <param name="pageIndex">Номер страницы.</param>
            <returns>Коллекция объявлений <see cref="T:BulletinBoard.Contracts.Post.PostDto"/></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.CreatePostAsync(BulletinBoard.Contracts.Post.CreatePostDto)">
            <summary>
            Создание объявления.
            </summary>
            <param name="dto">Модель для создания объявления.</param>
            <param name="cancellationToken">Отмена операции.</param>
            <returns>Идентификатор созданной сущности./></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.EditPostAsync(System.Guid,BulletinBoard.Contracts.Post.CreatePostDto)">
            <summary>
            Редактирование объявления.
            </summary>
            <param name="dto">Модель для редактирования объявления.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.PostController.DeletePostAsync(System.Guid)">
            <summary>
            Удаление объявления по идентификатору.
            </summary>
            <param name="id">Идентификатор объявления.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="T:BulletinBoard.Hosts.Api.Controllers.UserController">
            <summary>
            Контроллер для работы с пользователями.
            </summary>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.#ctor(BulletinBoard.Application.AppServices.Contexts.User.Services.IUserService)">
            <summary>
            Инициализация экземпляра <see cref="T:BulletinBoard.Hosts.Api.Controllers.PostController"/>
            </summary>
            <param name="postService">Сервис работы с пользователями.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.GetUsersAsync">
            <summary>
            Получение пользователей постранично.
            </summary>
            <param name="cancellationToken">Отмена операции.</param>
            <param name="pageSize">Размер страницы.</param>
            <param name="pageIndex">Номер страницы.</param>
            <returns>Коллекция пользователей <see cref="T:BulletinBoard.Contracts.Users.UserDto"/></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.GetUserAsync(System.Guid)">
            <summary>
            Получение пользователя по идентификатору.
            </summary>
            <param name="id">Идентификатор пользователя.</param>
            <returns>Модель пользователя <see cref="T:BulletinBoard.Contracts.Users.UserDto"/></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.CreateUserAsync(BulletinBoard.Contracts.Users.CreateUserDto)">
            <summary>
            Создание пользователя.
            </summary>
            <param name="user">Модель для создания пользователя.</param>
            <returns>Идентификатор созданной сущности./></returns>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.EditUserAsync(System.Guid,BulletinBoard.Contracts.Users.CreateUserDto)">
            <summary>
            Редактирование пользователя.
            </summary>
            <param name="user">Модель для редактирования пользователя.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
        <member name="M:BulletinBoard.Hosts.Api.Controllers.UserController.DeleteUserAsync(System.Guid)">
            <summary>
            Удаление пользователя по идентификатору.
            </summary>
            <param name="id">Идентификатор пользователя.</param>
            <param name="cancellationToken">Отмена операции.</param>
        </member>
    </members>
</doc>
